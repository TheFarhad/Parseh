<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Source/Presentation/Resources/Styles/Colors.xaml"/>
        <ResourceDictionary Source="/Source/Presentation/Resources/Styles/Fonts.xaml"/>
        <ResourceDictionary Source="/Source/Presentation/Resources/Styles/Variables.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" x:Key="TransparentButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="{Binding Width, RelativeSource={x:Static RelativeSource.Self}}"/>
    </Style>

    <Style TargetType="Button" x:Key="FontIconButton" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray2Brush}"/>
        <Setter Property="Width" Value="27"/>
        <Setter Property="FontSize" Value="{StaticResource FS15}"/>
    </Style>

    <Style TargetType="Button" x:Key="ChatSidebarButton" BasedOn="{StaticResource FontIconButton}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="4"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="4">

                        <TextBlock Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontFamily="{TemplateBinding FontFamily}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource Gray13Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LayoutFontIconButton" BasedOn="{StaticResource FontIconButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <TextBlock Text="{TemplateBinding Content}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontFamily="{TemplateBinding FontFamily}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource Gray13Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--base style to caption's buttons-->
    <Style TargetType="Button" x:Key="CaptionButtonsBaseStyle" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  Background="{TemplateBinding Background}" 
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Padding="{TemplateBinding Padding}">

                        <ContentPresenter Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="CaptionMenuButtonStyle" BasedOn="{StaticResource CaptionButtonsBaseStyle}">
        <Setter Property="Padding" Value="6.5"/>
    </Style>


    <!--base style to minimaize, maximaze and restore buttons-->
    <Style TargetType="Button" x:Key="LayoutButtonsBaseStyle" BasedOn="{StaticResource CaptionButtonsBaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource Gray6Brush}"/>
        <Setter Property="Padding" Value="6.5"/>
    </Style>

    <Style TargetType="Button" x:Key="ChatPageImageButtonsBaseStyle" BasedOn="{StaticResource CaptionButtonsBaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource Gray6Brush}"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style TargetType="Button" x:Key="LayoutButtonsStyle" BasedOn="{StaticResource LayoutButtonsBaseStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Gray10Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="LayoutCloseButtonStyle" BasedOn="{StaticResource LayoutButtonsBaseStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ImageButtonStyle" BasedOn="{StaticResource ChatPageImageButtonsBaseStyle}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  Background="{TemplateBinding Background}" 
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      CornerRadius="2">

                        <ContentPresenter Content="{TemplateBinding Content}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Gray12Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ChatMessageTopBarImageButtonStyle" BasedOn="{StaticResource CaptionButtonsBaseStyle}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  Background="{TemplateBinding Background}" 
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Padding="{TemplateBinding Padding}"
                             CornerRadius="2">

                        <Viewbox Stretch="Uniform">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Viewbox>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                     From="1.0" 
                                                     To="1.2" 
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                      From="1.0"
                                                     To="1.2" 
                                                     Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                     To="1.0" 
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                     To="1.0" 
                                                     Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="Submit">
        <Setter Property="Background" Value="{StaticResource Gray12Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray1Brush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="7, 15"/>
        <Setter Property="FontFamily" Value="{StaticResource OpensansSemibold}"/>
        <Setter Property="FontSize" Value="{StaticResource FS13}"/>

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border x:Name="ButtonBorder"
                            CornerRadius="{StaticResource Radius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="true"
                            IsEnabled="{TemplateBinding IsEnabled}">

                        <TextBlock x:Name="presenter"
                                   Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                  />

                    </Border>

                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Gray9}" Duration="0:0:0.2" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource Gray12}" Duration="0:0:0.2" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Gray14Brush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="presenter" Value="{StaticResource Gray8Brush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="Button" x:Key="TranparentBorderedButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource Gray5Brush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource Gray5Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FS14}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!--original template-->
                        <StackPanel>
                            <Border x:Name="Border" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" 
                                                  Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                            <Border x:Name="Underline" 
                                    Opacity="0" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="0, -6, 0, 0"
                                    Height="1"/>
                        </StackPanel>

                        <!--loadign progress template-->
                        <!--TODO: Create Loading Progress bar-->

                    </Grid>

                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation To="0, 0.4, 0, 0" Duration="0:0:0.2" Storyboard.TargetName="Underline" Storyboard.TargetProperty="BorderThickness"/>
                                    <DoubleAnimation To="0.8" Duration="0:0:0.2" Storyboard.TargetName="Underline" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="Underline" Storyboard.TargetProperty="BorderThickness"/>
                                    <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="Underline" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="Button" x:Key="ImageButton" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                    Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">

                        <Image Source="{TemplateBinding Content}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                               />

                        <!--<TextBlock Text="{TemplateBinding Content}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontFamily="{TemplateBinding FontFamily}"/>-->
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource Gray13Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>